import org.gradle.internal.jvm.Jvm

/*
 * There is currently no "C application" plugin, so this build uses the "C++ application" plugin and then reconfigures it
 * to build C instead.
 */
plugins {
    id 'cpp-library'
    id("visual-studio")
}

group 'org.example'
version '1.0-SNAPSHOT'

library {
    binaries.configureEach { CppBinary binary ->
        def compileTask = binary.compileTask.get()
        compileTask.includes.from("${Jvm.current().javaHome}/include")
        compileTask.compilerArgs.add("-std=c++11")

        def osFamily = binary.targetPlatform.targetMachine.operatingSystemFamily
        if (osFamily.macOs) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/darwin")
        } else if (osFamily.linux) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/linux")
        } else if (osFamily.windows) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/win32")
        }
    }
}

visualStudio {
    projects.all {
        projectFile.withXml {
            asNode()
                .appendNode('PropertyGroup', [Condition: "'\$(Configuration)|\$(Platform)'=='debug|Win32'"])
                .appendNode('IncludePath',
                    "\$(VC_IncludePath);\$(WindowsSDK_IncludePath);" +
                        // Makes standard imports such as <iostream> available.
                        "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1;" +
                        // Makes std::memcpy available.
                        "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include;" +
                        // Makes pthread.h available.
                        // https://andreasfertig.blog/2021/02/clang-and-gcc-on-macos-catalina-finding-the-include-paths/
                        "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/;" +
                        // Makes jni.h available.
                        "\$(JAVA_HOME)\\include\\;" +
                        "\$(JAVA_HOME)\\include\\win32\\;" +
                        "\$(JAVA_HOME)\\include\\darwin\\;"
                )
        }
    }
}
